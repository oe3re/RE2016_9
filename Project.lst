Microsoft (R) Macro Assembler Version 14.00.23506.0	    06/08/16 01:11:38
re_projekat.asm						     Page 1 - 1


				;re_projekat.asm

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE macros.inc
			      C .NOLIST
			      C .LIST
			      C 
 = 0007A120			BUFFER_SIZE = 500000

 00000000			.data 

 00000000  0007A120 [		buffer BYTE BUFFER_SIZE DUP(?)                 ;ulazni bafer
	    00
	   ]
 0007A120 00			color BYTE ?                                   ;bajt za boju kvadrata
 0007A121 00000000		bytesInFile DWORD ?                            ;broj ucitanih bajtova
 0007A125 00			x0_cord BYTE ?                                 ;x0 i y0 su koordinate gornjeg desnog ugla kvadrata 
 0007A126 00			y0_cord BYTE ?                                 
 0007A127 00			x1_cord BYTE ?                                 ;x1 i y1 su koordinate donjeg desnog ugla kvadrata
 0007A128 00			y1_cord BYTE ?
 0007A129  00000050 [		filename BYTE 80 DUP(0)                        ;ime ulaznog fajla
	    00
	   ]
 0007A179 00000000		fileHandle HANDLE ?                            
 0007A17D 00000000		cursorInfo CONSOLE_CURSOR_INFO <>
	   00000000
 0007A185 00000000		outHandle DWORD ?

 00000000			.code

				;PROCEDURA KOJA PRETVARA ASCII U INT

 00000000			convert_ascii_to_int PROC
 00000000  B9 00000000		mov ecx,    0                             ;u ecx stavljamo 0
 00000005  B8 00000000		mov eax,    0							  ;u ecx stavljamo 0
 0000000A			nextDigit:
 0000000A  8A 1E		    mov bl, [esi]						  ;u bl stavljamo ono na sta ukazuje ESI
 0000000C  80 FB 30		    cmp bl, '0'							  ;proveravamo da li je cifra u opsegu 0-9
 0000000F  7C 11		    jl  exitProc
 00000011  80 FB 39		    cmp bl, '9'
 00000014  7F 0C		    jg  exitProc
 00000016  80 C3 D0		    add bl, -30h						   ;oduzimamo 30h 
 00000019  6B C0 0A		    imul    eax,    10                     ;mnozimo eax sa 10
 0000001C  03 C3		    add eax,    ebx						   ;na eax dodajemo novoprocitanu cifru

 0000001E  41			    inc ecx								   ;inkrementiramo ecx
 0000001F  46			    inc esi								   ;inkrementiramo esi

 00000020  EB E8		    jmp nextDigit						   ;ucitavamo sledecu cifru (dakle ovo ce vec da ucita 20h) da utvrdi da to nije broj i da izadje)

 00000022			exitProc: 
 00000022  C3			    ret
 00000023			convert_ascii_to_int ENDP

 00000023			main proc
				; Korisnik upisuje ime fajla sa standardnog ulaza
					mWrite "Unesite ime fajla: "
 0007A189		     1		.data		
 0007A189 55 6E 65 73 69     1		??0000 BYTE "Unesite ime fajla: ",0	
	   74 65 20 69 6D
	   65 20 66 61 6A
	   6C 61 3A 20 00
 00000023		     1		.code
 00000023  52		     1		push	edx
 00000024  BA 0007A189 R     1		mov	edx,OFFSET ??0000
 00000029  E8 00000000 E     1		call	WriteString
 0000002E  5A		     1		pop	edx
 0000002F  BA 0007A129 R		mov edx, OFFSET filename
 00000034  B9 00000050			mov ecx, SIZEOF filename
 00000039  E8 00000000 E		call ReadString

				; Otvaranje fajla
 0000003E  BA 0007A129 R		mov edx, OFFSET filename
 00000043  E8 00000000 E		call OpenInputFile
 00000048  A3 0007A179 R		mov fileHandle, eax

				; Provera gresaka
 0000004D  83 F8 FF			cmp eax, INVALID_HANDLE_VALUE							;da li je bilo gresaka pri otvaranju?
 00000050  75 16			jne file_opened											;ako jeste - sledeca instrukcija
					mWrite "Greska: Nije moguce otvoriti fajl!"
 0007A19D		     1		.data		
 0007A19D 47 72 65 73 6B     1		??0001 BYTE "Greska: Nije moguce otvoriti fajl!",0	
	   61 3A 20 4E 69
	   6A 65 20 6D 6F
	   67 75 63 65 20
	   6F 74 76 6F 72
	   69 74 69 20 66
	   61 6A 6C 21 00
 00000052		     1		.code
 00000052  52		     1		push	edx
 00000053  BA 0007A19D R     1		mov	edx,OFFSET ??0001
 00000058  E8 00000000 E     1		call	WriteString
 0000005D  5A		     1		pop	edx
 0000005E  E8 00000000 E		call WriteWindowsMsg
 00000063  E9 0000015E			jmp quit												;prekid rada jer postoji greska

 00000068			file_opened:
				;Ucitavanje fajla u bafer
 00000068  BA 00000000 R		mov edx, OFFSET buffer
 0000006D  B9 0007A120			mov ecx, BUFFER_SIZE
 00000072  E8 00000000 E		call ReadFromFile
 00000077  A3 0007A121 R		mov bytesInFile, eax                                    ;cuvamo broj procitanih bajtova
 0000007C  73 13			jnc check_buffer_size									;proveravamo da li je doslo do greske pri citanju
					mWrite "Greska: Doslo je do greske pri citanju fajla!"	;ako jeste - prikazuje se poruka na ekranu 
 0007A1C0		     1		.data		
 0007A1C0 47 72 65 73 6B     1		??0002 BYTE "Greska: Doslo je do greske pri citanju fajla!",0	
	   61 3A 20 44 6F
	   73 6C 6F 20 6A
	   65 20 64 6F 20
	   67 72 65 73 6B
	   65 20 70 72 69
	   20 63 69 74 61
	   6E 6A 75 20 66
	   61 6A 6C 61 21
	   00
 0000007E		     1		.code
 0000007E  52		     1		push	edx
 0000007F  BA 0007A1C0 R     1		mov	edx,OFFSET ??0002
 00000084  E8 00000000 E     1		call	WriteString
 00000089  5A		     1		pop	edx
 0000008A  E8 00000000 E		call WriteWindowsMsg
 0000008F  EB 1D			jmp close_file

 00000091			check_buffer_size:
 00000091  3D 0007A120			cmp eax, BUFFER_SIZE 	                                                                       ;proveravamo se da li je ulazni bafer dovoljno veliki
 00000096  72 20			jb drawing								                                                       ;ako jeste - lets draw!
					mWrite "Greska: Broj karaktera u fajlu prevazilazi velicinu bafera! Ucitajte manji fajl"       ;ukoliko nije ispisuje se greska
 0007A1EE		     1		.data		
 0007A1EE 47 72 65 73 6B     1		??0003 BYTE "Greska: Broj karaktera u fajlu prevazilazi velicinu bafera! Ucitajte manji fajl",0	
	   61 3A 20 42 72
	   6F 6A 20 6B 61
	   72 61 6B 74 65
	   72 61 20 75 20
	   66 61 6A 6C 75
	   20 70 72 65 76
	   61 7A 69 6C 61
	   7A 69 20 76 65
	   6C 69 63 69 6E
	   75 20 62 61 66
	   65 72 61 21 20
	   55 63 69 74 61
	   6A 74 65 20 6D
	   61 6E 6A 69 20
	   66 61 6A 6C 00
 00000098		     1		.code
 00000098  52		     1		push	edx
 00000099  BA 0007A1EE R     1		mov	edx,OFFSET ??0003
 0000009E  E8 00000000 E     1		call	WriteString
 000000A3  5A		     1		pop	edx
 000000A4  E8 00000000 E		call WriteWindowsMsg
 000000A9  E9 00000118			jmp quit
					
				;zatvorimo file
 000000AE			close_file:
 000000AE  A1 0007A179 R		mov eax, fileHandle
 000000B3  E8 00000000 E		call CloseFile

				;lets draw!
 000000B8			drawing:
					
 000000B8  B8 00000000			mov eax,0
 000000BD  BB 00000000			mov ebx,0
 000000C2  B9 00000000			mov ecx,0
 000000C7  BA 00000000			mov edx,0
					
					;brisanje sadrzaja konzole i podesavanja kursora
 000000CC  E8 00000000 E		call Clrscr
					INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 000000D1  6A F5	   *	    push    -00000000Bh
 000000D3  E8 00000000 E   *	    call   GetStdHandle
 000000D8  A3 0007A185 R		mov outHandle, eax
					INVOKE GetConsoleCursorInfo, outHandle, ADDR cursorInfo
 000000DD  68 0007A17D R   *	    push   OFFSET cursorInfo
 000000E2  FF 35 0007A185 R *	    push   outHandle
 000000E8  E8 00000000 E   *	    call   GetConsoleCursorInfo
 000000ED  C7 05 0007A181 R		mov cursorInfo.bVisible,0
	   00000000
					INVOKE SetConsoleCursorInfo, outHandle, ADDR cursorInfo
 000000F7  68 0007A17D R   *	    push   OFFSET cursorInfo
 000000FC  FF 35 0007A185 R *	    push   outHandle
 00000102  E8 00000000 E   *	    call   SetConsoleCursorInfo

 00000107  B8 00000000			mov eax,0

 0000010C  BE 00000000 R		mov esi, OFFSET buffer ;u ESI se stavlja adresa buffer-a

 00000111				ReadOneLine:                            ;citamo koordinate jednog kvadrata

 00000111  E8 FFFFFEEA				call convert_ascii_to_int           ;ucitavamo koordinate

 00000116  80 FB 20				cmp bl, ' '                         ;svaki put kada se skoci na ReadLine ocekuje se da je u bl cifra osim ako je kraj falja
 00000119  74 05				jz ifNotEnd                         ;ukoliko nije kraj fajla nakon izlaska iz procedure convert_ascii_to_int u bl ce se nalaziti
 0000011B  E9 000000A6				jmp quit                            ;' ', u suprotnom  smo dosli do kraja i treba zavrsiti program
						
						
 00000120					ifNotEnd:

 00000120  A2 0007A125 R				mov x0_cord, al                ;ucitavamo x0
 00000125  46						inc esi
							 
 00000126  E8 FFFFFED5					call convert_ascii_to_int      ;ucitavamo y0
 0000012B  A2 0007A126 R				mov y0_cord, al
 00000130  46						inc esi

 00000131  E8 FFFFFECA					call convert_ascii_to_int      ;ucitavamo x1
 00000136  A2 0007A127 R				mov x1_cord, al
 0000013B  46						inc esi

 0000013C  E8 FFFFFEBF					call convert_ascii_to_int      ;ucitavamo y1
 00000141  A2 0007A128 R				mov y1_cord, al
 00000146  46						inc esi

 00000147  E8 FFFFFEB4					call convert_ascii_to_int      ;ucitavamo boju
 0000014C  A2 0007A120 R				mov color, al
 00000151  46						inc esi
					
 00000152  8A 1E					mov bl, [esi]                  ; u bl ucitavamo ono sto je na adresi na koju ukazuje esi
 00000154  80 FB 20					cmp bl, ' '                    ; uporedjuje bl sa razmakom
 00000157  74 0A					jz ReadSpecialCaracters
 00000159  80 FB 0A					cmp bl, 0ah
 0000015C  74 05					jz ReadSpecialCaracters
 0000015E  80 FB 0D					cmp bl, 0dh                    ;uporedjuje bl sa 0ah
 00000161  74 00					jz ReadSpecialCaracters

 00000163				ReadSpecialCaracters:
 00000163  46					inc esi                       ;posto je u bl ili ' ' ili \r ili \n inkrementiramo esi
 00000164  8A 1E				mov bl, [esi]                 ;pomeramo u bl, [esi]

 00000166  80 FB 0A				cmp bl, 0ah                   ;proveravamo da li je \n
 00000169  74 F8				jz ReadSpecialCaracters

 0000016B  80 FB 0D				cmp bl, 0dh                   ;proveravamo da li je \r
 0000016E  74 F3				jz ReadSpecialCaracters

 00000170  80 FB 20				cmp bl, ' '                   ;proveravamo da li je ' '
 00000173  74 EE				jz ReadSpecialCaracters

 00000175  EB 00				jmp DrawRect                  ;kada smo ucitali liniju, idemo na iscrtavanje

 00000177				DrawRect:
						
 00000177  8A 35 0007A126 R			mov dh, y0_cord               ;u dh stavljamo y cursor position

 0000017D					DrawVertical:                 ;iscrtavanje po vertikali
							
 0000017D  B8 00000000					mov eax, 0
 00000182  A0 0007A120 R				mov al, color      ;postavljamo boju kvadrata koji treba iscrtati
 00000187  E8 00000000 E				call SetTextColor

 0000018C  B8 00000000					mov eax, 0
 00000191  8A 15 0007A125 R				mov dl, x0_cord               ;u dl stavljamo x cursor position
 00000197  A0 0007A128 R				mov al, y1_cord
 0000019C  2A 05 0007A126 R				sub al, y0_cord
 000001A2  04 01					add al, 1
 000001A4  8B C8					mov ecx, eax                  ;u brojac stavljamo duzinu stanice po x osi (jer je ista kao po y osi)
 000001A6  B0 DB					mov al, 0DBh                  ;solid-block

 000001A8						DrawHorizontal:               ;iscrtavamo po x osi ecx puta

 000001A8  E8 00000000 E					call Gotoxy       
 000001AD  E8 00000000 E					call WriteChar
 000001B2  FE C2						inc dl
 000001B4  E2 F2						loop DrawHorizontal
							
 000001B6  3A 35 0007A128 R				cmp dh, y1_cord
 000001BC  0F 84 FFFFFF4F				jz ReadOneLine

 000001C2  FE C6					inc dh
 000001C4  EB B7					jmp DrawVertical

 000001C6			quit:                                                           ;zavrsavamo program
 000001C6  B0 0A			mov al, 0ah													;menjamo broju teksta na belu 
 000001C8  B8 0000000F			mov eax, 15
 000001CD  E8 00000000 E		call SetTextColor
 000001D2  E8 00000000 E		call ReadChar                                               ;ceka na karakter sa ulaza da bi zavrsio izvrsavanje
					exit
 000001D7  6A 00	   *	    push   +000000000h
 000001D9  E8 00000000 E   *	    call   ExitProcess

 000001DE			main endp
				end main
Microsoft (R) Macro Assembler Version 14.00.23506.0	    06/08/16 01:11:38
re_projekat.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0007A23E Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001DE Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
convert_ascii_to_int . . . . . .	P Near	 00000000 _TEXT	Length= 00000023 Public STDCALL
  nextDigit  . . . . . . . . . .	L Near	 0000000A _TEXT	
  exitProc . . . . . . . . . . .	L Near	 00000022 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000023 _TEXT	Length= 000001BB Public STDCALL
  file_opened  . . . . . . . . .	L Near	 00000068 _TEXT	
  check_buffer_size  . . . . . .	L Near	 00000091 _TEXT	
  close_file . . . . . . . . . .	L Near	 000000AE _TEXT	
  drawing  . . . . . . . . . . .	L Near	 000000B8 _TEXT	
  ReadOneLine  . . . . . . . . .	L Near	 00000111 _TEXT	
  ifNotEnd . . . . . . . . . . .	L Near	 00000120 _TEXT	
  ReadSpecialCaracters . . . . .	L Near	 00000163 _TEXT	
  DrawRect . . . . . . . . . . .	L Near	 00000177 _TEXT	
  DrawVertical . . . . . . . . .	L Near	 0000017D _TEXT	
  DrawHorizontal . . . . . . . .	L Near	 000001A8 _TEXT	
  quit . . . . . . . . . . . . .	L Near	 000001C6 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 0007A189 _DATA	
??0001 . . . . . . . . . . . . .	Byte	 0007A19D _DATA	
??0002 . . . . . . . . . . . . .	Byte	 0007A1C0 _DATA	
??0003 . . . . . . . . . . . . .	Byte	 0007A1EE _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
BUFFER_SIZE  . . . . . . . . . .	Number	 0007A120h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000000 _DATA	
bytesInFile  . . . . . . . . . .	DWord	 0007A121 _DATA	
color  . . . . . . . . . . . . .	Byte	 0007A120 _DATA	
cursorInfo . . . . . . . . . . .	CONSOLE_CURSOR_INFO  0007A17D _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileHandle . . . . . . . . . . .	DWord	 0007A179 _DATA	
filename . . . . . . . . . . . .	Byte	 0007A129 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
outHandle  . . . . . . . . . . .	DWord	 0007A185 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
x0_cord  . . . . . . . . . . . .	Byte	 0007A125 _DATA	
x1_cord  . . . . . . . . . . . .	Byte	 0007A127 _DATA	
y0_cord  . . . . . . . . . . . .	Byte	 0007A126 _DATA	
y1_cord  . . . . . . . . . . . .	Byte	 0007A128 _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
